apply plugin: "spring-boot"

jar {
    baseName = proxyModuleName
    version = jarVersion
}

dependencies {
    compile project(":CommonModule")
    compile "org.springframework.cloud:spring-cloud-starter-zuul"
}

springBoot {
    mainClass = "dawid.kotarba.proxy.ProxyModule"
}

task createPropertiesFile(dependsOn: processResources) << {
    storeProperties("$buildDir", "application.properties", decorateCommonProperties())
    storeProperties("$buildDir", "modules.properties", createModulesProperties())
    copyCommonProperties("$buildDir")
}

def decorateCommonProperties() {
    def props = createCommonProperties()

    // Zuul routing
    addZuulProperties(props, authenticationModuleName)
    addZuulProperties(props, usersModuleName)
    addZuulProperties(props, registrationModuleName)
    addZuulProperties(props, historyModuleName)
    addZuulProperties(props, userInterfaceModuleName)

    return props
}

def addZuulProperties(props, moduleName) {
    props.setProperty("zuul.routes.${moduleName}.path", "/${moduleName}/**")
    props.setProperty("zuul.routes.${moduleName}.serviceId", moduleName)
}

classes {
    dependsOn createPropertiesFile
}