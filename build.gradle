buildscript {
    ext {
        springBootVersion = "1.3.5.RELEASE"
        swaggerVersion = "2.0.2"
        scalaVeresion = "2.11.8"
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/release/" }
        maven { url "http://repo.spring.io/libs-snapshot-local" }
        maven { url "http://repo.spring.io/libs-milestone-local" }
        maven { url "http://repo.spring.io/libs-release-local" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.8.2"
    }
}

subprojects {

    apply plugin: "scala"
    apply plugin: "scalaStyle"
    apply plugin: "com.github.kt3k.coveralls"
    apply plugin: "jacoco"
    apply plugin: "io.spring.dependency-management"

    ext {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-netflix:1.1.2.RELEASE"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/release/" }
        maven { url "http://repo.spring.io/libs-snapshot-local" }
        maven { url "http://repo.spring.io/libs-milestone-local" }
        maven { url "http://repo.spring.io/libs-release-local" }
    }

    dependencies {
        // Spring
        compile "org.scala-lang:scala-library:${scalaVeresion}"
        compile("org.springframework.boot:spring-boot-starter-web")
        compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        compile "org.springframework.cloud:spring-cloud-starter-eureka"
        testCompile "org.springframework.boot:spring-boot-starter-test"

        // Swagger
        compile "io.springfox:springfox-swagger2:${swaggerVersion}"
        compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    }

    scalaStyle {
        configLocation = "scalastyle_config.xml"
        includeTestSourceDirectory = true
        source = "src/main/scala"
        testSource = "src/test/scala"
    }

    jacoco {
        toolVersion = "0.7.5.201505241946"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    tasks.coveralls {
        dependsOn "check"
    }
}