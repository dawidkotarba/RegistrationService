apply from: "config/modules_config.gradle"

buildscript {

    // override Spring Boot's versions
    ext["jackson.version"] = "2.7.5"

    // regular versions
    ext {
        // Scala
        scalaVeresion = "2.11.8"

        // Spring
        springBootVersion = "1.4.0.RELEASE"
        activeMqVersion = "1.4.0.BUILD-SNAPSHOT"

        // testing
        mockitoVersion = "1.10.19"

        // db
        queryDslVersion = "3.7.4"
        h2DbVersion = "1.4.192"
        ehCacheVersion = "2.6.11"

        // utils
        guavaVersion = "19.0"
        swaggerVersion = "2.5.0"
        jacksonVersion = ext["jackson.version"] // has to match spring boot's jackson version

        // reports
        jacocoVersion = "0.7.6.201602180812"
        coverallsVersion = "2.4.0"
        scalastyleVersion = "0.8.2"

        // test
        scalaTestVersion = "3.0.0"

        // folders
        srcDir = "src/main/scala"
        testDir = "src/test/scala"
        itestDir = "src/itest/scala"
        resourcesDir = "/resources/main/"
        jacocoReportPath = "build/jacoco/jacocoTest.exec"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/release/" }
        maven { url "http://repo.spring.io/libs-snapshot-local" }
        maven { url "http://repo.spring.io/libs-milestone-local" }
        maven { url "http://repo.spring.io/libs-release-local" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:${coverallsVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:${scalastyleVersion}"
    }
}

subprojects {

    apply plugin: "scala"
    apply plugin: "scalaStyle"
    apply plugin: "com.github.kt3k.coveralls"
    apply plugin: "jacoco"
    apply plugin: "io.spring.dependency-management"
    apply from: "../config/commons.gradle"
    apply from: "../config/test_config.gradle"
    apply from: "../config/utils_config.gradle"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-netflix:1.1.2.RELEASE"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/release/" }
        maven { url "http://repo.spring.io/libs-snapshot-local" }
        maven { url "http://repo.spring.io/libs-milestone-local" }
        maven { url "http://repo.spring.io/libs-release-local" }
    }

    dependencies {
        // Scala
        compile "org.scala-lang:scala-library:${scalaVeresion}"

        // Spring boot
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-cache"
        compile "org.springframework.boot:spring-boot-starter-security"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        compile "org.springframework.boot:spring-boot-starter-activemq:${activeMqVersion}"

        // Spring
        compile "org.springframework.security.oauth:spring-security-oauth2"
        compile "org.springframework.cloud:spring-cloud-starter-eureka"

        // db
        compile "org.springframework.boot:spring-boot-starter-data-jpa"
        compile "com.h2database:h2:${h2DbVersion}"
        compile "net.sf.ehcache:ehcache-core:${ehCacheVersion}"
        compile "com.mysema.querydsl:querydsl-jpa:${queryDslVersion}"
        compile "com.mysema.querydsl:querydsl-apt:${queryDslVersion}:jpa"

        // Jackson
        compile "com.fasterxml.jackson.module:jackson-module-scala_2.11:${jacksonVersion}"

        // Swagger
        compile "io.springfox:springfox-swagger2:${swaggerVersion}"
        compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

        // utils
        compile "com.google.guava:guava:${guavaVersion}"

        // test
        testCompile "org.scalatest:scalatest_2.11:${scalaTestVersion}"
        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile "org.mockito:mockito-all:${mockitoVersion}"
    }
}
