ext {

    def resourcesFolder = "/resources/main/"
    def testResourcesFolder = "/resources/test/"

    storeProperties = { buildDir, propertiesName, propertiesFile ->
        createFolder(buildDir + resourcesFolder)
        def path = new File(buildDir + resourcesFolder + propertiesName)
        propertiesFile.store(path.newWriter(), null)
    }

    createCommonProperties = { ->
        Properties props = new Properties()
        props.setProperty("spring.application.name", applicationName)
        props.setProperty("default.locale", defaultLocale)
//        props.setProperty("server.contextPath", "/" + applicationName)
        props.setProperty("server.port", serverPort)
        props.setProperty("eureka.client.serviceUrl.defaultZone", "http://${eurekaIpAddress}:${eurekaServerPort}/eureka/")
        props.setProperty("oauth.token.endpoint", "http://${oauthServerIpAddress}:${oauthServerPort}/oauth/check_token")
        return props
    }

    createModulesProperties = { ->
        Properties props = new Properties()
        props.setProperty("modules.serviceDiscoveryModule.name", serviceDiscoveryModuleName)
        props.setProperty("modules.authenticationModule.name", authenticationModuleName)
        props.setProperty("modules.usersModule.name", usersModuleName)
        return props
    }

    copySharedProperties = { buildDir ->
        copy {
            from("../SharedModule/src/main/resources")
            into(buildDir + resourcesFolder)
        }
    }

    createFolder = { path ->
        def dir = new File(path)
        if (!dir.exists()) {
            dir.mkdirs()
        }
    }

    copyMainPropertiesToTest = { buildDir ->
        copy {
            from(buildDir + resourcesFolder)
            into(buildDir + testResourcesFolder)
        }
    }
}
